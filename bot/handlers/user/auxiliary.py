from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext

from ...settings import settings
from ...db.models.models import Users
from aiogram.types import CallbackQuery

from ...core.bot import bot
from ...templates.user.commands import hello_user_msg
from ...keyboards.user.commands import start_user_keyb

from ...templates.admin.commands import hello_admin_msg
from ...keyboards.admin.commands import start_admin_keyb


router = Router()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é"
@router.callback_query(F.data == "back_menu")
async def back_buttons(callback: types.CallbackQuery, state: FSMContext):

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    tg_id = callback.from_user.id
    info_users = await Users.get(tg_id=tg_id)
    role = info_users.role

    if role == 'admin': # –ê–¥–º–∏–Ω
        await callback.message.edit_text(
            text=hello_admin_msg,
            reply_markup=start_admin_keyb
        )

    else: # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        await callback.message.edit_text(
            text=hello_user_msg,
            reply_markup=await start_user_keyb(bot)
        )

    await state.clear()
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é" - –∫–æ–≥–¥–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
@router.callback_query(F.data == "back_menu:images")
async def back_buttons_images(callback: types.CallbackQuery, state: FSMContext):

    # –î–∞–Ω–Ω—ã–µ
    data = await state.get_data()
    last_id_message = data.get('last_id_message')

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    tg_id = callback.from_user.id
    info_users = await Users.get(tg_id=tg_id)
    role = info_users.role

    if role == 'admin': # –ê–¥–º–∏–Ω
        await callback.message.answer(
            text=hello_admin_msg,
            reply_markup=start_admin_keyb
        )

    else: # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        await callback.message.answer(
            text=hello_user_msg,
            reply_markup=await start_user_keyb(bot)
        )

    await bot.delete_message(chat_id=callback.from_user.id, message_id=last_id_message)
    await state.clear()


# –ö–æ–≥–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
@router.callback_query(F.data == "support_unavailable")
async def support_unavailable_cb(query: CallbackQuery):
    await query.answer(
        "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ ‚è≥",
        show_alert=True
    )


# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é
@router.message()
async def handle_unexpected_message(message: types.Message, state: FSMContext):
    print('üõë –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ - –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ üõë')
    await message.delete()    